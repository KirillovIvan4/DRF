version: '3.8'

services:
  web:
    build: .
    command: >
        bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - .:/code
      - static_volume:/code/static
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5

    celery:
      build:
        context: .
      command: celery -A config worker -l INFO
      volumes:
        - .:/app
      depends_on:
        - db
        - redis

    celery_beat:
      build:
        context: .
      command: celery -A config beat -l INFO -S django
      volumes:
        - .:/app
      depends_on:
        - db
        - redis
        - celery

  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: mydatabase
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5


volumes:
  postgres_data:
  static_volume: